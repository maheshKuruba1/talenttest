package routines;

import java.util.Locale;

import org.apache.commons.lang3.RegExUtils;
import org.apache.commons.lang3.StringUtils;

public class CODASupplierUtils {

    /**
     * From TMPDX we receive TMPDX<p>
     * From TMTAXI we receive TMTAXI<p>
     * From TMTAXI1 we receive TMTAXI2<p>
     * From TMTAXI49 we receive TMTAXI50<p>
     */
    public static String plusOne(final String code, final boolean plusOne) {
    	
    	if( ! plusOne) {
    		return code;
    	}
    	
    	final String prefix;
    	
    	if(plusOne && code.length() < 6) {
    		prefix = StringUtils.rightPad(code, 6, 'X');
    	} else {
    		prefix = code.substring(0,6);
    	}
    	
        final int postFix;
        
        if (code.length() > 6) {
            postFix = Integer.parseInt(code.substring(6)) + 1;
        } else {
        	postFix = 1;
        }

        return prefix + postFix;
    }

	public static String getDefaultSupplierCode(final String supplierName) {

		/* The order is important!
		 * 
		 *  1. remove all characters with accents 
		 *  2. remove all invalid characters (incl. e.g. unicode "?")
		 *  3. remove trailing whitespace
		 */
		final String accentlessSuppliername = StringUtils.stripAccents(supplierName);
		
		StringBuilder strippedAccentValue = new StringBuilder();
		
		for(int charNum = 0; charNum != supplierName.length(); charNum++) {
			
			if(supplierName.charAt(charNum) == accentlessSuppliername.charAt(charNum)) {
				strippedAccentValue.append(supplierName.charAt(charNum));
			}
			
		}
		
		final String strippedOfSpecials = RegExUtils.removeAll(strippedAccentValue.toString(), "[^A-Za-z0-9]");
		final String trimmedCode = StringUtils.trim(strippedOfSpecials);
		
		final String shortenedCode;

		if(trimmedCode.length() >= 4) {
			shortenedCode = trimmedCode.substring(0,4); // VH  || VHA_ || VH__
		} else  { /*if(trimmedCode.length() < 4)*/
//			shortenedCode = StringUtils.rightPad(trimmedCode, 4, 'X');
			shortenedCode = trimmedCode; 
		}
		
   		return "TM" + shortenedCode.toUpperCase(Locale.ENGLISH); // TMVH__ || TMVHA_ || TMVH__ 

	}
}
